<?php


namespace App\Admin;

use App\Entity\InternetPlan;
use App\Entity\PricingType;
use App\Entity\ValueObject\Price;
use Sonata\AdminBundle\Datagrid\Datagrid;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Form\FormMapper;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;

class InternetAdmin extends ProductAdmin
{
    protected function configureFormFields(FormMapper $formMapper)
    {
        parent::configureFormFields($formMapper);

        $formMapper->tab('Основное')
                ->with('Product')
                    ->remove('category')
                ->end()
                ->with('Интернет', ['class' => 'col-md-6'])
                    ->add('speed', IntegerType::class, [
                        'label' => 'Скорость'
                    ])
                ->end()
//                ->with('Адреса', ['class' => 'col-md-6'])
//                    ->add('assigned_address_objects', EntityType::class, [
//                        'class' => AddressObject::class,
//                        'multiple' => true,
//                        'expanded' => true,
//                        'label' => false,
//                    ])
//                ->end()
                ->with('Ценовая группа', ['class' => 'col-md-6'])
                    ->add('pricingType', EntityType::class, [
                        'class' => PricingType::class,
                        'choice_label' => function ($item) {
                            return $item->getName();
                        },
                    ])
                ->end()
            ->end()
        ;


    }

    protected function configureListFields(ListMapper $listMapper)
    {

        $listMapper
            ->add('id')
            ->addIdentifier('title')
            ->add('pricing_type', null, [
                'label' => 'Ценовая категория',
            ])
            ->add('price.monthlyPrice', 'currency', [
                'label' => 'Цена ежемесячная',
                'currency' => Price::currency,
            ])
            ->add('_action', null, [
                'actions' => [
                    'edit' => [],
                    'delete' => [],
                    'clone' => [],
                ],
                'label' => 'Действия',
            ]);
        ;

    }

    protected function configureDatagridFilters(DatagridMapper $datagridMapper)
    {
        $datagridMapper
            ->add('title')
            ->add('pricingType')
            ;
    }

    /*
     * Set default category for internet plan
     */
    public function prePersist($object)
    {
        /**
         * @var InternetPlan $object
         */
        $object->setCategory(
            $this->getCategoryManager()->findOneBy(['code' => 'internet_basic'])
        );
        parent::prePersist($object); // TODO: Change the autogenerated stub
    }


    protected function getRootCategoryCode()
    {
        return 'internet';
    }


}