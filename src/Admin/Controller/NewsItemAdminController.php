<?php

declare(strict_types=1);

namespace App\Admin\Controller;

use App\Entity\ActivatedInterface;
use Sonata\AdminBundle\Controller\CRUDController;
use Sonata\AdminBundle\Datagrid\ProxyQueryInterface;
use Sonata\AdminBundle\Exception\ModelManagerException;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Security\Core\Exception\AccessDeniedException;

final class NewsItemAdminController extends CRUDController
{

    public function editAction($id = null)
    {
        return parent::editAction($id); // TODO: Change the autogenerated stub
    }



    public function batchActionPublish(ProxyQueryInterface $selectedModelQuery, Request $request, $publish = true)
    {

        $this->admin->checkAccess('edit');

        $modelManager = $this->admin->getModelManager();


        if(
            !in_array(
                ActivatedInterface::class,
                class_implements($this->admin->getClass())
            )
        )
            throw new \InvalidArgumentException();


        $target = $modelManager->findBy($this->admin->getClass(), [ 'id' => $request->get('idx')]);

        if ($target === null){
            $this->addFlash('sonata_flash_info', 'flash_batch_publish_no_target');

            return new RedirectResponse(
                $this->admin->generateUrl('list', [
                    'filter' => $this->admin->getFilterParameters()
                ])
            );
        }

        /**
         * @var $selectedModels ActivatedInterface[]
         */
        $selectedModels = $selectedModelQuery->execute();


        try {
            foreach ($selectedModels as $selectedModel) {
                $selectedModel->setIsActive($publish);
            }

            $modelManager->update($selectedModel);
        } catch (\Exception $e) {
            $this->addFlash('sonata_flash_error', 'flash_batch_publish_error');

            return new RedirectResponse(
                $this->admin->generateUrl('list', [
                    'filter' => $this->admin->getFilterParameters()
                ])
            );
        }

        $this->addFlash('sonata_flash_success', $this->trans('flash_batch_publish_success', [], 'messages'));

        return new RedirectResponse(
            $this->admin->generateUrl('list', [
                'filter' => $this->admin->getFilterParameters()
            ])
        );

    }

}
