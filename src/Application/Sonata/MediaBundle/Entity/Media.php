<?php

namespace App\Application\Sonata\MediaBundle\Entity;

use App\Entity\Sliders\SlideGallery;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Event\LifecycleEventArgs;
use Sonata\MediaBundle\Entity\BaseMedia as BaseMedia;
use Doctrine\ORM\Mapping as ORM;

/**
 * This file has been generated by the SonataEasyExtendsBundle.
 *
 * @link https://sonata-project.org/easy-extends
 *
 * References:
 * @link http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 */
class Media extends BaseMedia
{
    /**
     * @var int $id
     */
    protected $id;

    /**
     * @ORM\ManyToMany(targetEntity="App\Entity\Sliders\SlideGallery", mappedBy="additionalImages")
     */
    private $slideGalleries;

    public function __construct()
    {
        $this->slideGalleries = new ArrayCollection();
    }


    /**
     * Get id.
     *
     * @return int $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * @return Collection|SlideGallery[]
     */
    public function getSlideGalleries(): Collection
    {
        return $this->slideGalleries;
    }

    public function addSlideGallery(SlideGallery $slideGallery): self
    {
        if (!$this->slideGalleries->contains($slideGallery)) {
            $this->slideGalleries[] = $slideGallery;
            $slideGallery->addAdditionalImage($this);
        }

        return $this;
    }

    public function removeSlideGallery(SlideGallery $slideGallery): self
    {
        if ($this->slideGalleries->contains($slideGallery)) {
            $this->slideGalleries->removeElement($slideGallery);
            $slideGallery->removeAdditionalImage($this);
        }

        return $this;
    }

}
