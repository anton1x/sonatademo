# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.products.categories.context: products
    sonata.classification.manager.category.class: App\Application\Sonata\ClassificationBundle\Entity\CategoryManager

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Application,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


    app.admin.product_admin:
        class: App\Admin\ProductAdmin
        arguments: [~, App\Entity\Product,~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Продукт, group: Продукты }

    app.admin.internet:
        class: App\Admin\InternetAdmin
        arguments: [~, App\Entity\InternetPlan,~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Интернет-тарифы, group: Продукты }

    app.admin.tvplan:
        class: App\Admin\TVPlanAdmin
        arguments: [~, App\Entity\TVPlan,~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Тв-тарифы, group: Продукты }

    app.admin.additional_service:
        class: App\Admin\AdditionalServicePlanAdmin
        arguments: [~, App\Entity\AdditionalServicePlan,~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Доп. Услуги, group: Продукты }


    sonata_category_selector:
        class: App\Application\Sonata\ClassificationBundle\Form\Type\CategorySelectorType
        arguments: ['@sonata.classification.manager.category']


    app.admin.extension.seo_info_extension:
        class: App\Admin\Extension\SeoInfoExtension

#    App\Basket\BasketManager:
#        class: App\Basket\BasketManager
#        arguments: ['@session']
#        calls:
#            - [ 'initFromSession' ]

    mailer:
        alias: fos_user.mailer.noop
        public: true

    admin.news_item:
        class: App\Admin\NewsItemAdmin
        arguments: [~, App\Entity\NewsItem, App\Admin\Controller\NewsItemAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, label: "Новости" }
        public: true

    app.admin.address_object:
        class: App\Admin\AddressObjectAdmin
        arguments: [~, App\Entity\AddressObject, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: "Адреса подключения" }
        public: true

    app.serializer.media_handler:
        class: App\Application\Sonata\MediaBundle\Serializer\MediaSerializationHandler
        tags:
            - { name: jms_serializer.handler, type: 'media_links', direction: serialization, format: json, method: serializeMedia }
        arguments: [ '@sonata.media.provider.image', '@sonata.media.provider.file' ]

    app.serializer.adress_object_id_handler:
        class: App\Serializer\ArrayIdsSerializationHandler
        tags:
            - { name: jms_serializer.handler, type: 'object_ids', direction: serialization, format: json, method: serialize }

    app.serializer.category_code_handler:
        class: App\Serializer\CategorySerializationHandler
        tags:
            - { name: jms_serializer.handler, type: 'category_code', direction: serialization, format: json, method: serialize }
